{
  "dependencies": [],
  "packages": [],
  "files": [
    {
      "path": "setup.py",
      "type": "file",
      "package_data": [
        {
          "type": "pypi",
          "namespace": null,
          "name": "cdp-seattle-backend",
          "version": "1.0.0",
          "qualifiers": {},
          "subpath": null,
          "primary_language": "Python",
          "description": "Package containing the gather functions for Example.",
          "release_date": null,
          "parties": [
            {
              "type": "person",
              "role": "author",
              "name": "Council Data Project Contributors",
              "email": null,
              "url": null
            }
          ],
          "keywords": [
            "civic technology",
            "open government",
            "Development Status :: 2 - Pre-Alpha",
            "Intended Audience :: Developers",
            "Natural Language :: English",
            "Programming Language :: Python :: 3.9"
          ],
          "homepage_url": "https://github.com/CouncilDataProject/seattle",
          "download_url": null,
          "size": null,
          "sha1": null,
          "md5": null,
          "sha256": null,
          "sha512": null,
          "bug_tracking_url": null,
          "code_view_url": null,
          "vcs_url": null,
          "copyright": null,
          "declared_license_expression": "mit",
          "declared_license_expression_spdx": "MIT",
          "license_detections": [
            {
              "license_expression": "mit",
              "detection_log": [
                "not-combined"
              ],
              "matches": [
                {
                  "score": 100.0,
                  "start_line": 1,
                  "end_line": 1,
                  "matched_length": 2,
                  "match_coverage": 100.0,
                  "matcher": "1-hash",
                  "license_expression": "mit",
                  "rule_identifier": "mit_14.RULE",
                  "rule_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/rules/mit_14.RULE",
                  "referenced_filenames": [],
                  "is_license_text": false,
                  "is_license_notice": false,
                  "is_license_reference": true,
                  "is_license_tag": false,
                  "is_license_intro": false,
                  "rule_length": 2,
                  "rule_relevance": 100,
                  "matched_text": "MIT license",
                  "licenses": [
                    {
                      "key": "mit",
                      "name": "MIT License",
                      "short_name": "MIT License",
                      "category": "Permissive",
                      "is_exception": false,
                      "is_unknown": false,
                      "owner": "MIT",
                      "homepage_url": "http://opensource.org/licenses/mit-license.php",
                      "text_url": "http://opensource.org/licenses/mit-license.php",
                      "reference_url": "https://scancode-licensedb.aboutcode.org/mit",
                      "scancode_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/licenses/mit.LICENSE",
                      "spdx_license_key": "MIT",
                      "spdx_url": "https://spdx.org/licenses/MIT"
                    }
                  ]
                }
              ]
            },
            {
              "license_expression": "mit",
              "detection_log": [
                "not-combined"
              ],
              "matches": [
                {
                  "score": 100.0,
                  "start_line": 1,
                  "end_line": 1,
                  "matched_length": 5,
                  "match_coverage": 100.0,
                  "matcher": "1-hash",
                  "license_expression": "mit",
                  "rule_identifier": "pypi_mit_license.RULE",
                  "rule_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/rules/pypi_mit_license.RULE",
                  "referenced_filenames": [],
                  "is_license_text": false,
                  "is_license_notice": false,
                  "is_license_reference": false,
                  "is_license_tag": true,
                  "is_license_intro": false,
                  "rule_length": 5,
                  "rule_relevance": 100,
                  "matched_text": "['License :: OSI Approved :: MIT License']",
                  "licenses": [
                    {
                      "key": "mit",
                      "name": "MIT License",
                      "short_name": "MIT License",
                      "category": "Permissive",
                      "is_exception": false,
                      "is_unknown": false,
                      "owner": "MIT",
                      "homepage_url": "http://opensource.org/licenses/mit-license.php",
                      "text_url": "http://opensource.org/licenses/mit-license.php",
                      "reference_url": "https://scancode-licensedb.aboutcode.org/mit",
                      "scancode_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/licenses/mit.LICENSE",
                      "spdx_license_key": "MIT",
                      "spdx_url": "https://spdx.org/licenses/MIT"
                    }
                  ]
                }
              ]
            }
          ],
          "other_license_expression": null,
          "other_license_expression_spdx": null,
          "other_license_detections": [],
          "extracted_license_statement": "{'license': 'MIT license', 'classifiers': ['License :: OSI Approved :: MIT License']}",
          "notice_text": null,
          "source_packages": [],
          "file_references": [],
          "extra_data": {
            "python_requires": ">=3.9"
          },
          "dependencies": [
            {
              "purl": "pkg:pypi/cdp-backend@3.0.16",
              "extracted_requirement": "cdp-backend[pipeline]==3.0.16",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/cdp-scrapers",
              "extracted_requirement": "cdp-scrapers>=0.4.0",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": false,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/black",
              "extracted_requirement": "black>=19.10b0",
              "scope": "test",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": false,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/flake8",
              "extracted_requirement": "flake8>=3.8.3",
              "scope": "test",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": false,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/flake8-debugger",
              "extracted_requirement": "flake8-debugger>=3.2.1",
              "scope": "test",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": false,
              "resolved_package": {},
              "extra_data": {}
            }
          ],
          "repository_homepage_url": "https://pypi.org/project/cdp-seattle-backend",
          "repository_download_url": "https://pypi.org/packages/source/c/cdp-seattle-backend/cdp-seattle-backend-1.0.0.tar.gz",
          "api_data_url": "https://pypi.org/pypi/cdp-seattle-backend/1.0.0/json",
          "datasource_id": "pypi_setup_py",
          "purl": "pkg:pypi/cdp-seattle-backend@1.0.0"
        }
      ],
      "for_packages": [],
      "scan_errors": []
    }
  ]
}