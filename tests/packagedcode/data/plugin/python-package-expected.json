{
  "packages": [
    {
      "type": "pypi",
      "namespace": null,
      "name": "arpy",
      "version": "0.1.1",
      "qualifiers": {},
      "subpath": null,
      "primary_language": "Python",
      "description": "Library for accessing \"ar\" files",
      "release_date": null,
      "parties": [
        {
          "type": "person",
          "role": "author",
          "name": "Stanis\u0142aw Pitucha",
          "email": "viraptor@gmail.com",
          "url": null
        }
      ],
      "keywords": [],
      "homepage_url": "http://bitbucket.org/viraptor/arpy",
      "download_url": null,
      "size": null,
      "sha1": null,
      "md5": null,
      "sha256": null,
      "sha512": null,
      "bug_tracking_url": null,
      "code_view_url": null,
      "vcs_url": null,
      "copyright": null,
      "declared_license_expression": "bsd-simplified",
      "declared_license_expression_spdx": "BSD-2-Clause",
      "license_detections": [
        {
          "license_expression": "bsd-simplified",
          "detection_log": [
            "not-combined"
          ],
          "matches": [
            {
              "score": 100.0,
              "start_line": 1,
              "end_line": 1,
              "matched_length": 2,
              "match_coverage": 100.0,
              "matcher": "1-hash",
              "license_expression": "bsd-simplified",
              "rule_identifier": "bsd-simplified_150.RULE",
              "rule_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/rules/bsd-simplified_150.RULE",
              "matched_text": "Simplified BSD"
            }
          ]
        }
      ],
      "other_license_expression": null,
      "other_license_expression_spdx": null,
      "other_license_detections": [],
      "extracted_license_statement": "{'license': 'Simplified BSD'}",
      "notice_text": null,
      "source_packages": [],
      "extra_data": {},
      "repository_homepage_url": "https://pypi.org/project/arpy",
      "repository_download_url": "https://pypi.org/packages/source/a/arpy/arpy-0.1.1.tar.gz",
      "api_data_url": "https://pypi.org/pypi/arpy/0.1.1/json",
      "package_uid": "pkg:pypi/arpy@0.1.1?uuid=fixed-uid-done-for-testing-5642512d1758",
      "datafile_paths": [
        "arpy/setup.py"
      ],
      "datasource_ids": [
        "pypi_setup_py"
      ],
      "purl": "pkg:pypi/arpy@0.1.1"
    },
    {
      "type": "pypi",
      "namespace": null,
      "name": "atomicwrites",
      "version": "1.2.1",
      "qualifiers": {},
      "subpath": null,
      "primary_language": "Python",
      "description": "===================\npython-atomicwrites\n===================\n\n.. image:: https://travis-ci.org/untitaker/python-atomicwrites.svg?branch=master\n    :target: https://travis-ci.org/untitaker/python-atomicwrites\n\n.. image:: https://ci.appveyor.com/api/projects/status/vadc4le3c27to59x/branch/master?svg=true\n   :target: https://ci.appveyor.com/project/untitaker/python-atomicwrites/branch/master\n\nAtomic file writes.\n\n.. code-block:: python\n\n    from atomicwrites import atomic_write\n\n    with atomic_write('foo.txt', overwrite=True) as f:\n        f.write('Hello world.')\n        # \"foo.txt\" doesn't exist yet.\n\n    # Now it does.\n\n\nFeatures that distinguish it from other similar libraries (see `Alternatives and Credit`_):\n\n- Race-free assertion that the target file doesn't yet exist. This can be\n  controlled with the ``overwrite`` parameter.\n\n- Windows support, although not well-tested. The MSDN resources are not very\n  explicit about which operations are atomic. I'm basing my assumptions off `a\n  comment\n  <https://social.msdn.microsoft.com/Forums/windowsdesktop/en-US/449bb49d-8acc-48dc-a46f-0760ceddbfc3/movefileexmovefilereplaceexisting-ntfs-same-volume-atomic?forum=windowssdk#a239bc26-eaf0-4920-9f21-440bd2be9cc8>`_\n  by `Doug Crook\n  <https://social.msdn.microsoft.com/Profile/doug%20e.%20cook>`_, who appears\n  to be a Microsoft employee:\n\n      FAQ: Is MoveFileEx atomic\n      Frequently asked question: Is MoveFileEx atomic if the existing and new\n      files are both on the same drive?\n\n      The simple answer is \"usually, but in some cases it will silently fall-back\n      to a non-atomic method, so don't count on it\".\n\n      The implementation of MoveFileEx looks something like this: [...]\n\n      The problem is if the rename fails, you might end up with a CopyFile, which\n      is definitely not atomic.\n\n      If you really need atomic-or-nothing, you can try calling\n      NtSetInformationFile, which is unsupported but is much more likely to be\n      atomic. \n\n- Simple high-level API that wraps a very flexible class-based API.\n\n- Consistent error handling across platforms.\n\n\nHow it works\n============\n\nIt uses a temporary file in the same directory as the given path. This ensures\nthat the temporary file resides on the same filesystem.\n\nThe temporary file will then be atomically moved to the target location: On\nPOSIX, it will use ``rename`` if files should be overwritten, otherwise a\ncombination of ``link`` and ``unlink``. On Windows, it uses MoveFileEx_ through\nstdlib's ``ctypes`` with the appropriate flags.\n\nNote that with ``link`` and ``unlink``, there's a timewindow where the file\nmight be available under two entries in the filesystem: The name of the\ntemporary file, and the name of the target file.\n\nAlso note that the permissions of the target file may change this way. In some\nsituations a ``chmod`` can be issued without any concurrency problems, but\nsince that is not always the case, this library doesn't do it by itself.\n\n.. _MoveFileEx: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365240%28v=vs.85%29.aspx\n\nfsync\n-----\n\nOn POSIX, ``fsync`` is invoked on the temporary file after it is written (to\nflush file content and metadata), and on the parent directory after the file is\nmoved (to flush filename).\n\n``fsync`` does not take care of disks' internal buffers, but there don't seem\nto be any standard POSIX APIs for that. On OS X, ``fcntl`` is used with\n``F_FULLFSYNC`` instead of ``fsync`` for that reason.\n\nOn Windows, `_commit <https://msdn.microsoft.com/en-us/library/17618685.aspx>`_\nis used, but there are no guarantees about disk internal buffers.\n\nAlternatives and Credit\n=======================\n\nAtomicwrites is directly inspired by the following libraries (and shares a\nminimal amount of code):\n\n- The Trac project's `utility functions\n  <http://www.edgewall.org/docs/tags-trac-0.11.7/epydoc/trac.util-pysrc.html>`_,\n  also used in `Werkzeug <http://werkzeug.pocoo.org/>`_ and\n  `mitsuhiko/python-atomicfile\n  <https://github.com/mitsuhiko/python-atomicfile>`_. The idea to use\n  ``ctypes`` instead of ``PyWin32`` originated there.\n\n- `abarnert/fatomic <https://github.com/abarnert/fatomic>`_. Windows support\n  (based on ``PyWin32``) was originally taken from there.\n\nOther alternatives to atomicwrites include:\n\n- `sashka/atomicfile <https://github.com/sashka/atomicfile>`_. Originally I\n  considered using that, but at the time it was lacking a lot of features I\n  needed (Windows support, overwrite-parameter, overriding behavior through\n  subclassing).\n\n- The `Boltons library collection <https://github.com/mahmoud/boltons>`_\n  features a class for atomic file writes, which seems to have a very similar\n  ``overwrite`` parameter. It is lacking Windows support though.\n\nLicense\n=======\n\nLicensed under the MIT, see ``LICENSE``.",
      "release_date": null,
      "parties": [
        {
          "type": "person",
          "role": "author",
          "name": "Markus Unterwaditzer",
          "email": "markus@unterwaditzer.net",
          "url": null
        }
      ],
      "keywords": [
        "Programming Language :: Python :: 2",
        "Programming Language :: Python :: 2.7",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.4",
        "Programming Language :: Python :: 3.5",
        "Programming Language :: Python :: 3.6",
        "Programming Language :: Python :: Implementation :: CPython"
      ],
      "homepage_url": "https://github.com/untitaker/python-atomicwrites",
      "download_url": null,
      "size": null,
      "sha1": null,
      "md5": null,
      "sha256": null,
      "sha512": null,
      "bug_tracking_url": null,
      "code_view_url": null,
      "vcs_url": null,
      "copyright": null,
      "declared_license_expression": "mit",
      "declared_license_expression_spdx": "MIT",
      "license_detections": [
        {
          "license_expression": "mit",
          "detection_log": [
            "not-combined"
          ],
          "matches": [
            {
              "score": 100.0,
              "start_line": 1,
              "end_line": 1,
              "matched_length": 1,
              "match_coverage": 100.0,
              "matcher": "1-spdx-id",
              "license_expression": "mit",
              "rule_identifier": "spdx-license-identifier-mit-5da48780aba670b0860c46d899ed42a0f243ff06",
              "rule_url": null,
              "matched_text": "MIT"
            }
          ]
        },
        {
          "license_expression": "mit",
          "detection_log": [
            "not-combined"
          ],
          "matches": [
            {
              "score": 100.0,
              "start_line": 1,
              "end_line": 1,
              "matched_length": 5,
              "match_coverage": 100.0,
              "matcher": "1-hash",
              "license_expression": "mit",
              "rule_identifier": "pypi_mit_license.RULE",
              "rule_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/rules/pypi_mit_license.RULE",
              "matched_text": "['License :: OSI Approved :: MIT License']"
            }
          ]
        }
      ],
      "other_license_expression": null,
      "other_license_expression_spdx": null,
      "other_license_detections": [],
      "extracted_license_statement": "{'license': 'MIT', 'classifiers': ['License :: OSI Approved :: MIT License']}",
      "notice_text": null,
      "source_packages": [],
      "extra_data": {},
      "repository_homepage_url": "https://pypi.org/project/atomicwrites",
      "repository_download_url": "https://pypi.org/packages/source/a/atomicwrites/atomicwrites-1.2.1.tar.gz",
      "api_data_url": "https://pypi.org/pypi/atomicwrites/1.2.1/json",
      "package_uid": "pkg:pypi/atomicwrites@1.2.1?uuid=fixed-uid-done-for-testing-5642512d1758",
      "datafile_paths": [
        "atomicwrites/atomicwrites-1.2.1-py2.py3-none-any.whl"
      ],
      "datasource_ids": [
        "pypi_wheel"
      ],
      "purl": "pkg:pypi/atomicwrites@1.2.1"
    },
    {
      "type": "chef",
      "namespace": null,
      "name": "six",
      "version": "1.10.0",
      "qualifiers": {},
      "subpath": null,
      "primary_language": "Ruby",
      "description": null,
      "release_date": null,
      "parties": [],
      "keywords": [],
      "homepage_url": null,
      "download_url": "https://supermarket.chef.io/cookbooks/six/versions/1.10.0/download",
      "size": null,
      "sha1": null,
      "md5": null,
      "sha256": null,
      "sha512": null,
      "bug_tracking_url": null,
      "code_view_url": null,
      "vcs_url": null,
      "copyright": null,
      "declared_license_expression": "mit",
      "declared_license_expression_spdx": "MIT",
      "license_detections": [
        {
          "license_expression": "mit",
          "detection_log": [
            "not-combined"
          ],
          "matches": [
            {
              "score": 100.0,
              "start_line": 1,
              "end_line": 1,
              "matched_length": 1,
              "match_coverage": 100.0,
              "matcher": "1-spdx-id",
              "license_expression": "mit",
              "rule_identifier": "spdx-license-identifier-mit-5da48780aba670b0860c46d899ed42a0f243ff06",
              "rule_url": null,
              "matched_text": "MIT"
            }
          ]
        }
      ],
      "other_license_expression": null,
      "other_license_expression_spdx": null,
      "other_license_detections": [],
      "extracted_license_statement": "MIT",
      "notice_text": null,
      "source_packages": [],
      "extra_data": {},
      "repository_homepage_url": "https://supermarket.chef.io/cookbooks/six/versions/1.10.0/",
      "repository_download_url": "https://supermarket.chef.io/cookbooks/six/versions/1.10.0/download",
      "api_data_url": "https://supermarket.chef.io/api/v1/cookbooks/six/versions/1.10.0",
      "package_uid": "pkg:chef/six@1.10.0?uuid=fixed-uid-done-for-testing-5642512d1758",
      "datafile_paths": [
        "Six/metadata.json"
      ],
      "datasource_ids": [
        "chef_cookbook_metadata_json"
      ],
      "purl": "pkg:chef/six@1.10.0"
    },
    {
      "type": "pypi",
      "namespace": null,
      "name": "six",
      "version": "1.10.0",
      "qualifiers": {},
      "subpath": null,
      "primary_language": "Python",
      "description": "Python 2 and 3 compatibility utilities\nSix is a Python 2 and 3 compatibility library.  It provides utility functions\nfor smoothing over the differences between the Python versions with the goal of\nwriting Python code that is compatible on both Python versions.  See the\ndocumentation for more information on what is provided.\n\nSix supports every Python version since 2.6.  It is contained in only one Python\nfile, so it can be easily copied into your project. (The copyright and license\nnotice must be retained.)\n\nOnline documentation is at https://pythonhosted.org/six/.\n\nBugs can be reported to https://bitbucket.org/gutworth/six.  The code can also\nbe found there.\n\nFor questions about six or porting in general, email the python-porting mailing\nlist: https://mail.python.org/mailman/listinfo/python-porting",
      "release_date": null,
      "parties": [
        {
          "type": "person",
          "role": "author",
          "name": "Benjamin Peterson",
          "email": "benjamin@python.org",
          "url": null
        }
      ],
      "keywords": [
        "Programming Language :: Python :: 2",
        "Programming Language :: Python :: 3",
        "Intended Audience :: Developers",
        "Topic :: Software Development :: Libraries",
        "Topic :: Utilities"
      ],
      "homepage_url": "http://pypi.python.org/pypi/six/",
      "download_url": null,
      "size": null,
      "sha1": null,
      "md5": null,
      "sha256": null,
      "sha512": null,
      "bug_tracking_url": null,
      "code_view_url": null,
      "vcs_url": null,
      "copyright": null,
      "declared_license_expression": "mit",
      "declared_license_expression_spdx": "MIT",
      "license_detections": [
        {
          "license_expression": "mit",
          "detection_log": [
            "not-combined"
          ],
          "matches": [
            {
              "score": 100.0,
              "start_line": 1,
              "end_line": 1,
              "matched_length": 1,
              "match_coverage": 100.0,
              "matcher": "1-spdx-id",
              "license_expression": "mit",
              "rule_identifier": "spdx-license-identifier-mit-5da48780aba670b0860c46d899ed42a0f243ff06",
              "rule_url": null,
              "matched_text": "MIT"
            }
          ]
        },
        {
          "license_expression": "mit",
          "detection_log": [
            "not-combined"
          ],
          "matches": [
            {
              "score": 100.0,
              "start_line": 1,
              "end_line": 1,
              "matched_length": 5,
              "match_coverage": 100.0,
              "matcher": "1-hash",
              "license_expression": "mit",
              "rule_identifier": "pypi_mit_license.RULE",
              "rule_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/rules/pypi_mit_license.RULE",
              "matched_text": "['License :: OSI Approved :: MIT License']"
            }
          ]
        }
      ],
      "other_license_expression": null,
      "other_license_expression_spdx": null,
      "other_license_detections": [],
      "extracted_license_statement": "{'license': 'MIT', 'classifiers': ['License :: OSI Approved :: MIT License']}",
      "notice_text": null,
      "source_packages": [],
      "extra_data": {},
      "repository_homepage_url": "https://pypi.org/project/six",
      "repository_download_url": "https://pypi.org/packages/source/s/six/six-1.10.0.tar.gz",
      "api_data_url": "https://pypi.org/pypi/six/1.10.0/json",
      "package_uid": "pkg:pypi/six@1.10.0?uuid=fixed-uid-done-for-testing-5642512d1758",
      "datafile_paths": [
        "Six/Six.dist-info/METADATA"
      ],
      "datasource_ids": [
        "pypi_wheel_metadata"
      ],
      "purl": "pkg:pypi/six@1.10.0"
    },
    {
      "type": "pypi",
      "namespace": null,
      "name": "TicketImport",
      "version": "0.7a",
      "qualifiers": {},
      "subpath": null,
      "primary_language": "Python",
      "description": "Import CSV and Excel files\nUNKNOWN",
      "release_date": null,
      "parties": [
        {
          "type": "person",
          "role": "author",
          "name": "Francois Granade",
          "email": "fg@nexb.com",
          "url": null
        }
      ],
      "keywords": [],
      "homepage_url": "http://nexb.com",
      "download_url": null,
      "size": null,
      "sha1": null,
      "md5": null,
      "sha256": null,
      "sha512": null,
      "bug_tracking_url": null,
      "code_view_url": null,
      "vcs_url": null,
      "copyright": null,
      "declared_license_expression": "bsd-new",
      "declared_license_expression_spdx": "BSD-3-Clause",
      "license_detections": [
        {
          "license_expression": "bsd-new",
          "detection_log": [
            "not-combined"
          ],
          "matches": [
            {
              "score": 99.0,
              "start_line": 1,
              "end_line": 1,
              "matched_length": 2,
              "match_coverage": 100.0,
              "matcher": "1-hash",
              "license_expression": "bsd-new",
              "rule_identifier": "bsd-new_89.RULE",
              "rule_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/rules/bsd-new_89.RULE",
              "matched_text": "license BSD"
            }
          ]
        }
      ],
      "other_license_expression": null,
      "other_license_expression_spdx": null,
      "other_license_detections": [],
      "extracted_license_statement": "{'license': 'BSD'}",
      "notice_text": null,
      "source_packages": [],
      "extra_data": {},
      "repository_homepage_url": "https://pypi.org/project/TicketImport",
      "repository_download_url": "https://pypi.org/packages/source/T/TicketImport/TicketImport-0.7a.tar.gz",
      "api_data_url": "https://pypi.org/pypi/TicketImport/0.7a/json",
      "package_uid": "pkg:pypi/ticketimport@0.7a?uuid=fixed-uid-done-for-testing-5642512d1758",
      "datafile_paths": [
        "TicketImport/PKG-INFO"
      ],
      "datasource_ids": [
        "pypi_sdist_pkginfo"
      ],
      "purl": "pkg:pypi/ticketimport@0.7a"
    }
  ],
  "dependencies": [
    {
      "purl": "pkg:pypi/atomicwrites@1.1.5",
      "extracted_requirement": "==1.1.5",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/atomicwrites@1.1.5?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/attrs@18.1.0",
      "extracted_requirement": "==18.1.0",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/attrs@18.1.0?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/contextlib2@0.5.5",
      "extracted_requirement": "==0.5.5",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/contextlib2@0.5.5?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/coverage@4.5.1",
      "extracted_requirement": "==4.5.1",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/coverage@4.5.1?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/funcsigs@1.0.2",
      "extracted_requirement": "==1.0.2",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/funcsigs@1.0.2?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/mock@2.0.0",
      "extracted_requirement": "==2.0.0",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/mock@2.0.0?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/more-itertools@4.2.0",
      "extracted_requirement": "==4.2.0",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/more-itertools@4.2.0?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/pbr@4.2.0",
      "extracted_requirement": "==4.2.0",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/pbr@4.2.0?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/pluggy@0.6.0",
      "extracted_requirement": "==0.6.0",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/pluggy@0.6.0?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/py@1.5.4",
      "extracted_requirement": "==1.5.4",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/py@1.5.4?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/pytest@3.6.3",
      "extracted_requirement": "==3.6.3",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/pytest@3.6.3?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/pytest-cov@2.5.1",
      "extracted_requirement": "==2.5.1",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/pytest-cov@2.5.1?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/pytest-vcr@0.3.0",
      "extracted_requirement": "==0.3.0",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/pytest-vcr@0.3.0?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/pyyaml@3.13",
      "extracted_requirement": "==3.13",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/pyyaml@3.13?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/six@1.11.0",
      "extracted_requirement": "==1.11.0",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/six@1.11.0?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/vcrpy@1.13.0",
      "extracted_requirement": "==1.13.0",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/vcrpy@1.13.0?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/wrapt@1.10.11",
      "extracted_requirement": "==1.10.11",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": true,
      "resolved_package": {},
      "extra_data": {},
      "dependency_uid": "pkg:pypi/wrapt@1.10.11?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "atomicwrites/Pipfile.lock",
      "datasource_id": "pipfile_lock"
    },
    {
      "purl": "pkg:pypi/setuptools",
      "extracted_requirement": "setuptools>=32.0.0",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": false,
      "resolved_package": {},
      "extra_data": {
        "is_editable": false,
        "link": null,
        "hash_options": [],
        "is_constraint": false,
        "is_archive": null,
        "is_wheel": false,
        "is_url": null,
        "is_vcs_url": null,
        "is_name_at_url": false,
        "is_local_path": null
      },
      "dependency_uid": "pkg:pypi/setuptools?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "requirements/requirements.txt",
      "datasource_id": "pip_requirements"
    },
    {
      "purl": "pkg:pypi/nose",
      "extracted_requirement": "nose>=1.3.7",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": false,
      "resolved_package": {},
      "extra_data": {
        "is_editable": false,
        "link": null,
        "hash_options": [],
        "is_constraint": false,
        "is_archive": null,
        "is_wheel": false,
        "is_url": null,
        "is_vcs_url": null,
        "is_name_at_url": false,
        "is_local_path": null
      },
      "dependency_uid": "pkg:pypi/nose?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "requirements/requirements.txt",
      "datasource_id": "pip_requirements"
    },
    {
      "purl": "pkg:pypi/chardet",
      "extracted_requirement": "chardet>=3.0.4",
      "scope": "install",
      "is_runtime": true,
      "is_optional": false,
      "is_resolved": false,
      "resolved_package": {},
      "extra_data": {
        "is_editable": false,
        "link": null,
        "hash_options": [],
        "is_constraint": false,
        "is_archive": null,
        "is_wheel": false,
        "is_url": null,
        "is_vcs_url": null,
        "is_name_at_url": false,
        "is_local_path": null
      },
      "dependency_uid": "pkg:pypi/chardet?uuid=fixed-uid-done-for-testing-5642512d1758",
      "for_package_uid": null,
      "datafile_path": "requirements/requirements.txt",
      "datasource_id": "pip_requirements"
    }
  ],
  "license_references": [
    {
      "key": "bsd-new",
      "language": "en",
      "short_name": "BSD-3-Clause",
      "name": "BSD-3-Clause",
      "category": "Permissive",
      "owner": "Regents of the University of California",
      "homepage_url": "http://www.opensource.org/licenses/BSD-3-Clause",
      "notes": "Per SPDX.org, this license is OSI certified.",
      "is_builtin": true,
      "is_exception": false,
      "is_unknown": false,
      "is_generic": false,
      "spdx_license_key": "BSD-3-Clause",
      "other_spdx_license_keys": [
        "LicenseRef-scancode-libzip"
      ],
      "osi_license_key": "BSD-3-Clause",
      "text_urls": [
        "http://www.opensource.org/licenses/BSD-3-Clause"
      ],
      "osi_url": "http://www.opensource.org/licenses/BSD-3-Clause",
      "faq_url": null,
      "other_urls": [
        "http://framework.zend.com/license/new-bsd",
        "https://opensource.org/licenses/BSD-3-Clause",
        "https://www.eclipse.org/org/documents/edl-v10.php"
      ],
      "key_aliases": [],
      "minimum_coverage": 0,
      "standard_notice": null,
      "ignorable_copyrights": [],
      "ignorable_holders": [],
      "ignorable_authors": [],
      "ignorable_urls": [],
      "ignorable_emails": [],
      "text": "Redistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list\nof conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this\nlist of conditions and the following disclaimer in the documentation and/or\nother materials provided with the distribution.\n\nNeither the name of the ORGANIZATION nor the names of its contributors may be\nused to endorse or promote products derived from this software without specific\nprior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS\nBE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\nGOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\nTHE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
      "scancode_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/licenses/bsd-new.LICENSE",
      "licensedb_url": "https://scancode-licensedb.aboutcode.org/bsd-new",
      "spdx_url": "https://spdx.org/licenses/BSD-3-Clause"
    },
    {
      "key": "bsd-simplified",
      "language": "en",
      "short_name": "BSD-2-Clause",
      "name": "BSD-2-Clause",
      "category": "Permissive",
      "owner": "Regents of the University of California",
      "homepage_url": "http://www.opensource.org/licenses/BSD-2-Clause",
      "notes": "Per SPDX.org, this license is OSI certified.",
      "is_builtin": true,
      "is_exception": false,
      "is_unknown": false,
      "is_generic": false,
      "spdx_license_key": "BSD-2-Clause",
      "other_spdx_license_keys": [
        "BSD-2-Clause-NetBSD",
        "BSD-2"
      ],
      "osi_license_key": null,
      "text_urls": [
        "http://opensource.org/licenses/bsd-license.php"
      ],
      "osi_url": "http://opensource.org/licenses/bsd-license.php",
      "faq_url": null,
      "other_urls": [
        "http://spdx.org/licenses/BSD-2-Clause",
        "http://www.freebsd.org/copyright/copyright.html",
        "https://opensource.org/licenses/BSD-2-Clause"
      ],
      "key_aliases": [],
      "minimum_coverage": 0,
      "standard_notice": null,
      "ignorable_copyrights": [],
      "ignorable_holders": [],
      "ignorable_authors": [],
      "ignorable_urls": [],
      "ignorable_emails": [],
      "text": "Redistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list\nof conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this\nlist of conditions and the following disclaimer in the documentation and/or\nother materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
      "scancode_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/licenses/bsd-simplified.LICENSE",
      "licensedb_url": "https://scancode-licensedb.aboutcode.org/bsd-simplified",
      "spdx_url": "https://spdx.org/licenses/BSD-2-Clause"
    },
    {
      "key": "mit",
      "language": "en",
      "short_name": "MIT License",
      "name": "MIT License",
      "category": "Permissive",
      "owner": "MIT",
      "homepage_url": "http://opensource.org/licenses/mit-license.php",
      "notes": "Per SPDX.org, this license is OSI certified.",
      "is_builtin": true,
      "is_exception": false,
      "is_unknown": false,
      "is_generic": false,
      "spdx_license_key": "MIT",
      "other_spdx_license_keys": [],
      "osi_license_key": null,
      "text_urls": [
        "http://opensource.org/licenses/mit-license.php"
      ],
      "osi_url": "http://www.opensource.org/licenses/MIT",
      "faq_url": "https://ieeexplore.ieee.org/document/9263265",
      "other_urls": [
        "https://opensource.com/article/18/3/patent-grant-mit-license",
        "https://opensource.com/article/19/4/history-mit-license",
        "https://opensource.org/licenses/MIT"
      ],
      "key_aliases": [],
      "minimum_coverage": 0,
      "standard_notice": null,
      "ignorable_copyrights": [],
      "ignorable_holders": [],
      "ignorable_authors": [],
      "ignorable_urls": [],
      "ignorable_emails": [],
      "text": "Permission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
      "scancode_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/licenses/mit.LICENSE",
      "licensedb_url": "https://scancode-licensedb.aboutcode.org/mit",
      "spdx_url": "https://spdx.org/licenses/MIT"
    }
  ],
  "license_rule_references": [
    {
      "license_expression": "bsd-new",
      "identifier": "bsd-new_89.RULE",
      "language": "en",
      "rule_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/rules/bsd-new_89.RULE",
      "is_license_text": false,
      "is_license_notice": false,
      "is_license_reference": false,
      "is_license_tag": true,
      "is_license_intro": false,
      "is_continuous": false,
      "is_builtin": true,
      "is_from_license": false,
      "is_synthetic": false,
      "length": 2,
      "relevance": 99,
      "minimum_coverage": 100,
      "referenced_filenames": [],
      "notes": null,
      "ignorable_copyrights": [],
      "ignorable_holders": [],
      "ignorable_authors": [],
      "ignorable_urls": [],
      "ignorable_emails": [],
      "text": "License: BSD"
    },
    {
      "license_expression": "bsd-simplified",
      "identifier": "bsd-simplified_150.RULE",
      "language": "en",
      "rule_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/rules/bsd-simplified_150.RULE",
      "is_license_text": false,
      "is_license_notice": false,
      "is_license_reference": true,
      "is_license_tag": false,
      "is_license_intro": false,
      "is_continuous": false,
      "is_builtin": true,
      "is_from_license": false,
      "is_synthetic": false,
      "length": 2,
      "relevance": 100,
      "minimum_coverage": 100,
      "referenced_filenames": [],
      "notes": null,
      "ignorable_copyrights": [],
      "ignorable_holders": [],
      "ignorable_authors": [],
      "ignorable_urls": [],
      "ignorable_emails": [],
      "text": "Simplified BSD"
    },
    {
      "license_expression": "mit",
      "identifier": "pypi_mit_license.RULE",
      "language": "en",
      "rule_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/rules/pypi_mit_license.RULE",
      "is_license_text": false,
      "is_license_notice": false,
      "is_license_reference": false,
      "is_license_tag": true,
      "is_license_intro": false,
      "is_continuous": false,
      "is_builtin": true,
      "is_from_license": false,
      "is_synthetic": false,
      "length": 5,
      "relevance": 100,
      "minimum_coverage": 80,
      "referenced_filenames": [],
      "notes": null,
      "ignorable_copyrights": [],
      "ignorable_holders": [],
      "ignorable_authors": [],
      "ignorable_urls": [],
      "ignorable_emails": [],
      "text": "License :: OSI Approved :: MIT License"
    },
    {
      "license_expression": "mit",
      "identifier": "spdx-license-identifier-mit-5da48780aba670b0860c46d899ed42a0f243ff06",
      "language": "en",
      "rule_url": null,
      "is_license_text": false,
      "is_license_notice": false,
      "is_license_reference": false,
      "is_license_tag": true,
      "is_license_intro": false,
      "is_continuous": false,
      "is_builtin": true,
      "is_from_license": false,
      "is_synthetic": true,
      "length": 1,
      "relevance": 100,
      "minimum_coverage": 0,
      "referenced_filenames": [],
      "notes": null,
      "ignorable_copyrights": [],
      "ignorable_holders": [],
      "ignorable_authors": [],
      "ignorable_urls": [],
      "ignorable_emails": [],
      "text": "MIT"
    }
  ],
  "files": [
    {
      "path": "Six",
      "type": "directory",
      "package_data": [],
      "for_packages": [],
      "scan_errors": []
    },
    {
      "path": "Six/DESCRIPTION.rst",
      "type": "file",
      "package_data": [],
      "for_packages": [],
      "scan_errors": []
    },
    {
      "path": "Six/Six.dist-info",
      "type": "directory",
      "package_data": [],
      "for_packages": [],
      "scan_errors": []
    },
    {
      "path": "Six/Six.dist-info/METADATA",
      "type": "file",
      "package_data": [
        {
          "type": "pypi",
          "namespace": null,
          "name": "six",
          "version": "1.10.0",
          "qualifiers": {},
          "subpath": null,
          "primary_language": "Python",
          "description": "Python 2 and 3 compatibility utilities\nSix is a Python 2 and 3 compatibility library.  It provides utility functions\nfor smoothing over the differences between the Python versions with the goal of\nwriting Python code that is compatible on both Python versions.  See the\ndocumentation for more information on what is provided.\n\nSix supports every Python version since 2.6.  It is contained in only one Python\nfile, so it can be easily copied into your project. (The copyright and license\nnotice must be retained.)\n\nOnline documentation is at https://pythonhosted.org/six/.\n\nBugs can be reported to https://bitbucket.org/gutworth/six.  The code can also\nbe found there.\n\nFor questions about six or porting in general, email the python-porting mailing\nlist: https://mail.python.org/mailman/listinfo/python-porting",
          "release_date": null,
          "parties": [
            {
              "type": "person",
              "role": "author",
              "name": "Benjamin Peterson",
              "email": "benjamin@python.org",
              "url": null
            }
          ],
          "keywords": [
            "Programming Language :: Python :: 2",
            "Programming Language :: Python :: 3",
            "Intended Audience :: Developers",
            "Topic :: Software Development :: Libraries",
            "Topic :: Utilities"
          ],
          "homepage_url": "http://pypi.python.org/pypi/six/",
          "download_url": null,
          "size": null,
          "sha1": null,
          "md5": null,
          "sha256": null,
          "sha512": null,
          "bug_tracking_url": null,
          "code_view_url": null,
          "vcs_url": null,
          "copyright": null,
          "declared_license_expression": "mit",
          "declared_license_expression_spdx": "MIT",
          "license_detections": [
            {
              "license_expression": "mit",
              "detection_log": [
                "not-combined"
              ],
              "matches": [
                {
                  "score": 100.0,
                  "start_line": 1,
                  "end_line": 1,
                  "matched_length": 1,
                  "match_coverage": 100.0,
                  "matcher": "1-spdx-id",
                  "license_expression": "mit",
                  "rule_identifier": "spdx-license-identifier-mit-5da48780aba670b0860c46d899ed42a0f243ff06",
                  "rule_url": null,
                  "matched_text": "MIT"
                }
              ]
            },
            {
              "license_expression": "mit",
              "detection_log": [
                "not-combined"
              ],
              "matches": [
                {
                  "score": 100.0,
                  "start_line": 1,
                  "end_line": 1,
                  "matched_length": 5,
                  "match_coverage": 100.0,
                  "matcher": "1-hash",
                  "license_expression": "mit",
                  "rule_identifier": "pypi_mit_license.RULE",
                  "rule_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/rules/pypi_mit_license.RULE",
                  "matched_text": "['License :: OSI Approved :: MIT License']"
                }
              ]
            }
          ],
          "other_license_expression": null,
          "other_license_expression_spdx": null,
          "other_license_detections": [],
          "extracted_license_statement": "{'license': 'MIT', 'classifiers': ['License :: OSI Approved :: MIT License']}",
          "notice_text": null,
          "source_packages": [],
          "file_references": [],
          "extra_data": {},
          "dependencies": [],
          "repository_homepage_url": "https://pypi.org/project/six",
          "repository_download_url": "https://pypi.org/packages/source/s/six/six-1.10.0.tar.gz",
          "api_data_url": "https://pypi.org/pypi/six/1.10.0/json",
          "datasource_id": "pypi_wheel_metadata",
          "purl": "pkg:pypi/six@1.10.0"
        }
      ],
      "for_packages": [
        "pkg:pypi/six@1.10.0?uuid=fixed-uid-done-for-testing-5642512d1758"
      ],
      "scan_errors": []
    },
    {
      "path": "Six/metadata.json",
      "type": "file",
      "package_data": [
        {
          "type": "chef",
          "namespace": null,
          "name": "six",
          "version": "1.10.0",
          "qualifiers": {},
          "subpath": null,
          "primary_language": "Ruby",
          "description": null,
          "release_date": null,
          "parties": [],
          "keywords": [],
          "homepage_url": null,
          "download_url": "https://supermarket.chef.io/cookbooks/six/versions/1.10.0/download",
          "size": null,
          "sha1": null,
          "md5": null,
          "sha256": null,
          "sha512": null,
          "bug_tracking_url": null,
          "code_view_url": null,
          "vcs_url": null,
          "copyright": null,
          "declared_license_expression": "mit",
          "declared_license_expression_spdx": "MIT",
          "license_detections": [
            {
              "license_expression": "mit",
              "detection_log": [
                "not-combined"
              ],
              "matches": [
                {
                  "score": 100.0,
                  "start_line": 1,
                  "end_line": 1,
                  "matched_length": 1,
                  "match_coverage": 100.0,
                  "matcher": "1-spdx-id",
                  "license_expression": "mit",
                  "rule_identifier": "spdx-license-identifier-mit-5da48780aba670b0860c46d899ed42a0f243ff06",
                  "rule_url": null,
                  "matched_text": "MIT"
                }
              ]
            }
          ],
          "other_license_expression": null,
          "other_license_expression_spdx": null,
          "other_license_detections": [],
          "extracted_license_statement": "MIT",
          "notice_text": null,
          "source_packages": [],
          "file_references": [],
          "extra_data": {},
          "dependencies": [],
          "repository_homepage_url": "https://supermarket.chef.io/cookbooks/six/versions/1.10.0/",
          "repository_download_url": "https://supermarket.chef.io/cookbooks/six/versions/1.10.0/download",
          "api_data_url": "https://supermarket.chef.io/api/v1/cookbooks/six/versions/1.10.0",
          "datasource_id": "chef_cookbook_metadata_json",
          "purl": "pkg:chef/six@1.10.0"
        }
      ],
      "for_packages": [
        "pkg:chef/six@1.10.0?uuid=fixed-uid-done-for-testing-5642512d1758"
      ],
      "scan_errors": []
    },
    {
      "path": "TicketImport",
      "type": "directory",
      "package_data": [],
      "for_packages": [],
      "scan_errors": []
    },
    {
      "path": "TicketImport/PKG-INFO",
      "type": "file",
      "package_data": [
        {
          "type": "pypi",
          "namespace": null,
          "name": "TicketImport",
          "version": "0.7a",
          "qualifiers": {},
          "subpath": null,
          "primary_language": "Python",
          "description": "Import CSV and Excel files\nUNKNOWN",
          "release_date": null,
          "parties": [
            {
              "type": "person",
              "role": "author",
              "name": "Francois Granade",
              "email": "fg@nexb.com",
              "url": null
            }
          ],
          "keywords": [],
          "homepage_url": "http://nexb.com",
          "download_url": null,
          "size": null,
          "sha1": null,
          "md5": null,
          "sha256": null,
          "sha512": null,
          "bug_tracking_url": null,
          "code_view_url": null,
          "vcs_url": null,
          "copyright": null,
          "declared_license_expression": "bsd-new",
          "declared_license_expression_spdx": "BSD-3-Clause",
          "license_detections": [
            {
              "license_expression": "bsd-new",
              "detection_log": [
                "not-combined"
              ],
              "matches": [
                {
                  "score": 99.0,
                  "start_line": 1,
                  "end_line": 1,
                  "matched_length": 2,
                  "match_coverage": 100.0,
                  "matcher": "1-hash",
                  "license_expression": "bsd-new",
                  "rule_identifier": "bsd-new_89.RULE",
                  "rule_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/rules/bsd-new_89.RULE",
                  "matched_text": "license BSD"
                }
              ]
            }
          ],
          "other_license_expression": null,
          "other_license_expression_spdx": null,
          "other_license_detections": [],
          "extracted_license_statement": "{'license': 'BSD'}",
          "notice_text": null,
          "source_packages": [],
          "file_references": [],
          "extra_data": {},
          "dependencies": [],
          "repository_homepage_url": "https://pypi.org/project/TicketImport",
          "repository_download_url": "https://pypi.org/packages/source/T/TicketImport/TicketImport-0.7a.tar.gz",
          "api_data_url": "https://pypi.org/pypi/TicketImport/0.7a/json",
          "datasource_id": "pypi_sdist_pkginfo",
          "purl": "pkg:pypi/ticketimport@0.7a"
        }
      ],
      "for_packages": [
        "pkg:pypi/ticketimport@0.7a?uuid=fixed-uid-done-for-testing-5642512d1758"
      ],
      "scan_errors": []
    },
    {
      "path": "arpy",
      "type": "directory",
      "package_data": [],
      "for_packages": [],
      "scan_errors": []
    },
    {
      "path": "arpy/setup.py",
      "type": "file",
      "package_data": [
        {
          "type": "pypi",
          "namespace": null,
          "name": "arpy",
          "version": "0.1.1",
          "qualifiers": {},
          "subpath": null,
          "primary_language": "Python",
          "description": "Library for accessing \"ar\" files",
          "release_date": null,
          "parties": [
            {
              "type": "person",
              "role": "author",
              "name": "Stanis\u0142aw Pitucha",
              "email": "viraptor@gmail.com",
              "url": null
            }
          ],
          "keywords": [],
          "homepage_url": "http://bitbucket.org/viraptor/arpy",
          "download_url": null,
          "size": null,
          "sha1": null,
          "md5": null,
          "sha256": null,
          "sha512": null,
          "bug_tracking_url": null,
          "code_view_url": null,
          "vcs_url": null,
          "copyright": null,
          "declared_license_expression": "bsd-simplified",
          "declared_license_expression_spdx": "BSD-2-Clause",
          "license_detections": [
            {
              "license_expression": "bsd-simplified",
              "detection_log": [
                "not-combined"
              ],
              "matches": [
                {
                  "score": 100.0,
                  "start_line": 1,
                  "end_line": 1,
                  "matched_length": 2,
                  "match_coverage": 100.0,
                  "matcher": "1-hash",
                  "license_expression": "bsd-simplified",
                  "rule_identifier": "bsd-simplified_150.RULE",
                  "rule_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/rules/bsd-simplified_150.RULE",
                  "matched_text": "Simplified BSD"
                }
              ]
            }
          ],
          "other_license_expression": null,
          "other_license_expression_spdx": null,
          "other_license_detections": [],
          "extracted_license_statement": "{'license': 'Simplified BSD'}",
          "notice_text": null,
          "source_packages": [],
          "file_references": [],
          "extra_data": {},
          "dependencies": [],
          "repository_homepage_url": "https://pypi.org/project/arpy",
          "repository_download_url": "https://pypi.org/packages/source/a/arpy/arpy-0.1.1.tar.gz",
          "api_data_url": "https://pypi.org/pypi/arpy/0.1.1/json",
          "datasource_id": "pypi_setup_py",
          "purl": "pkg:pypi/arpy@0.1.1"
        }
      ],
      "for_packages": [
        "pkg:pypi/arpy@0.1.1?uuid=fixed-uid-done-for-testing-5642512d1758"
      ],
      "scan_errors": []
    },
    {
      "path": "atomicwrites",
      "type": "directory",
      "package_data": [],
      "for_packages": [],
      "scan_errors": []
    },
    {
      "path": "atomicwrites/Pipfile.lock",
      "type": "file",
      "package_data": [
        {
          "type": "pypi",
          "namespace": null,
          "name": null,
          "version": null,
          "qualifiers": {},
          "subpath": null,
          "primary_language": "Python",
          "description": null,
          "release_date": null,
          "parties": [],
          "keywords": [],
          "homepage_url": null,
          "download_url": null,
          "size": null,
          "sha1": null,
          "md5": null,
          "sha256": "6e45251662433bf51f96fb3d2204b65416fece329d60e6235c0f0edc416cfe24",
          "sha512": null,
          "bug_tracking_url": null,
          "code_view_url": null,
          "vcs_url": null,
          "copyright": null,
          "declared_license_expression": null,
          "declared_license_expression_spdx": null,
          "license_detections": [],
          "other_license_expression": null,
          "other_license_expression_spdx": null,
          "other_license_detections": [],
          "extracted_license_statement": null,
          "notice_text": null,
          "source_packages": [],
          "file_references": [],
          "extra_data": {},
          "dependencies": [
            {
              "purl": "pkg:pypi/atomicwrites@1.1.5",
              "extracted_requirement": "==1.1.5",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/attrs@18.1.0",
              "extracted_requirement": "==18.1.0",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/contextlib2@0.5.5",
              "extracted_requirement": "==0.5.5",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/coverage@4.5.1",
              "extracted_requirement": "==4.5.1",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/funcsigs@1.0.2",
              "extracted_requirement": "==1.0.2",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/mock@2.0.0",
              "extracted_requirement": "==2.0.0",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/more-itertools@4.2.0",
              "extracted_requirement": "==4.2.0",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/pbr@4.2.0",
              "extracted_requirement": "==4.2.0",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/pluggy@0.6.0",
              "extracted_requirement": "==0.6.0",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/py@1.5.4",
              "extracted_requirement": "==1.5.4",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/pytest@3.6.3",
              "extracted_requirement": "==3.6.3",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/pytest-cov@2.5.1",
              "extracted_requirement": "==2.5.1",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/pytest-vcr@0.3.0",
              "extracted_requirement": "==0.3.0",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/pyyaml@3.13",
              "extracted_requirement": "==3.13",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/six@1.11.0",
              "extracted_requirement": "==1.11.0",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/vcrpy@1.13.0",
              "extracted_requirement": "==1.13.0",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            },
            {
              "purl": "pkg:pypi/wrapt@1.10.11",
              "extracted_requirement": "==1.10.11",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": true,
              "resolved_package": {},
              "extra_data": {}
            }
          ],
          "repository_homepage_url": null,
          "repository_download_url": null,
          "api_data_url": null,
          "datasource_id": "pipfile_lock",
          "purl": null
        }
      ],
      "for_packages": [],
      "scan_errors": []
    },
    {
      "path": "atomicwrites/atomicwrites-1.2.1-py2.py3-none-any.whl",
      "type": "file",
      "package_data": [
        {
          "type": "pypi",
          "namespace": null,
          "name": "atomicwrites",
          "version": "1.2.1",
          "qualifiers": {},
          "subpath": null,
          "primary_language": "Python",
          "description": "===================\npython-atomicwrites\n===================\n\n.. image:: https://travis-ci.org/untitaker/python-atomicwrites.svg?branch=master\n    :target: https://travis-ci.org/untitaker/python-atomicwrites\n\n.. image:: https://ci.appveyor.com/api/projects/status/vadc4le3c27to59x/branch/master?svg=true\n   :target: https://ci.appveyor.com/project/untitaker/python-atomicwrites/branch/master\n\nAtomic file writes.\n\n.. code-block:: python\n\n    from atomicwrites import atomic_write\n\n    with atomic_write('foo.txt', overwrite=True) as f:\n        f.write('Hello world.')\n        # \"foo.txt\" doesn't exist yet.\n\n    # Now it does.\n\n\nFeatures that distinguish it from other similar libraries (see `Alternatives and Credit`_):\n\n- Race-free assertion that the target file doesn't yet exist. This can be\n  controlled with the ``overwrite`` parameter.\n\n- Windows support, although not well-tested. The MSDN resources are not very\n  explicit about which operations are atomic. I'm basing my assumptions off `a\n  comment\n  <https://social.msdn.microsoft.com/Forums/windowsdesktop/en-US/449bb49d-8acc-48dc-a46f-0760ceddbfc3/movefileexmovefilereplaceexisting-ntfs-same-volume-atomic?forum=windowssdk#a239bc26-eaf0-4920-9f21-440bd2be9cc8>`_\n  by `Doug Crook\n  <https://social.msdn.microsoft.com/Profile/doug%20e.%20cook>`_, who appears\n  to be a Microsoft employee:\n\n      FAQ: Is MoveFileEx atomic\n      Frequently asked question: Is MoveFileEx atomic if the existing and new\n      files are both on the same drive?\n\n      The simple answer is \"usually, but in some cases it will silently fall-back\n      to a non-atomic method, so don't count on it\".\n\n      The implementation of MoveFileEx looks something like this: [...]\n\n      The problem is if the rename fails, you might end up with a CopyFile, which\n      is definitely not atomic.\n\n      If you really need atomic-or-nothing, you can try calling\n      NtSetInformationFile, which is unsupported but is much more likely to be\n      atomic. \n\n- Simple high-level API that wraps a very flexible class-based API.\n\n- Consistent error handling across platforms.\n\n\nHow it works\n============\n\nIt uses a temporary file in the same directory as the given path. This ensures\nthat the temporary file resides on the same filesystem.\n\nThe temporary file will then be atomically moved to the target location: On\nPOSIX, it will use ``rename`` if files should be overwritten, otherwise a\ncombination of ``link`` and ``unlink``. On Windows, it uses MoveFileEx_ through\nstdlib's ``ctypes`` with the appropriate flags.\n\nNote that with ``link`` and ``unlink``, there's a timewindow where the file\nmight be available under two entries in the filesystem: The name of the\ntemporary file, and the name of the target file.\n\nAlso note that the permissions of the target file may change this way. In some\nsituations a ``chmod`` can be issued without any concurrency problems, but\nsince that is not always the case, this library doesn't do it by itself.\n\n.. _MoveFileEx: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365240%28v=vs.85%29.aspx\n\nfsync\n-----\n\nOn POSIX, ``fsync`` is invoked on the temporary file after it is written (to\nflush file content and metadata), and on the parent directory after the file is\nmoved (to flush filename).\n\n``fsync`` does not take care of disks' internal buffers, but there don't seem\nto be any standard POSIX APIs for that. On OS X, ``fcntl`` is used with\n``F_FULLFSYNC`` instead of ``fsync`` for that reason.\n\nOn Windows, `_commit <https://msdn.microsoft.com/en-us/library/17618685.aspx>`_\nis used, but there are no guarantees about disk internal buffers.\n\nAlternatives and Credit\n=======================\n\nAtomicwrites is directly inspired by the following libraries (and shares a\nminimal amount of code):\n\n- The Trac project's `utility functions\n  <http://www.edgewall.org/docs/tags-trac-0.11.7/epydoc/trac.util-pysrc.html>`_,\n  also used in `Werkzeug <http://werkzeug.pocoo.org/>`_ and\n  `mitsuhiko/python-atomicfile\n  <https://github.com/mitsuhiko/python-atomicfile>`_. The idea to use\n  ``ctypes`` instead of ``PyWin32`` originated there.\n\n- `abarnert/fatomic <https://github.com/abarnert/fatomic>`_. Windows support\n  (based on ``PyWin32``) was originally taken from there.\n\nOther alternatives to atomicwrites include:\n\n- `sashka/atomicfile <https://github.com/sashka/atomicfile>`_. Originally I\n  considered using that, but at the time it was lacking a lot of features I\n  needed (Windows support, overwrite-parameter, overriding behavior through\n  subclassing).\n\n- The `Boltons library collection <https://github.com/mahmoud/boltons>`_\n  features a class for atomic file writes, which seems to have a very similar\n  ``overwrite`` parameter. It is lacking Windows support though.\n\nLicense\n=======\n\nLicensed under the MIT, see ``LICENSE``.",
          "release_date": null,
          "parties": [
            {
              "type": "person",
              "role": "author",
              "name": "Markus Unterwaditzer",
              "email": "markus@unterwaditzer.net",
              "url": null
            }
          ],
          "keywords": [
            "Programming Language :: Python :: 2",
            "Programming Language :: Python :: 2.7",
            "Programming Language :: Python :: 3",
            "Programming Language :: Python :: 3.4",
            "Programming Language :: Python :: 3.5",
            "Programming Language :: Python :: 3.6",
            "Programming Language :: Python :: Implementation :: CPython"
          ],
          "homepage_url": "https://github.com/untitaker/python-atomicwrites",
          "download_url": null,
          "size": null,
          "sha1": null,
          "md5": null,
          "sha256": null,
          "sha512": null,
          "bug_tracking_url": null,
          "code_view_url": null,
          "vcs_url": null,
          "copyright": null,
          "declared_license_expression": "mit",
          "declared_license_expression_spdx": "MIT",
          "license_detections": [
            {
              "license_expression": "mit",
              "detection_log": [
                "not-combined"
              ],
              "matches": [
                {
                  "score": 100.0,
                  "start_line": 1,
                  "end_line": 1,
                  "matched_length": 1,
                  "match_coverage": 100.0,
                  "matcher": "1-spdx-id",
                  "license_expression": "mit",
                  "rule_identifier": "spdx-license-identifier-mit-5da48780aba670b0860c46d899ed42a0f243ff06",
                  "rule_url": null,
                  "matched_text": "MIT"
                }
              ]
            },
            {
              "license_expression": "mit",
              "detection_log": [
                "not-combined"
              ],
              "matches": [
                {
                  "score": 100.0,
                  "start_line": 1,
                  "end_line": 1,
                  "matched_length": 5,
                  "match_coverage": 100.0,
                  "matcher": "1-hash",
                  "license_expression": "mit",
                  "rule_identifier": "pypi_mit_license.RULE",
                  "rule_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/rules/pypi_mit_license.RULE",
                  "matched_text": "['License :: OSI Approved :: MIT License']"
                }
              ]
            }
          ],
          "other_license_expression": null,
          "other_license_expression_spdx": null,
          "other_license_detections": [],
          "extracted_license_statement": "{'license': 'MIT', 'classifiers': ['License :: OSI Approved :: MIT License']}",
          "notice_text": null,
          "source_packages": [],
          "file_references": [
            {
              "path": "atomicwrites/__init__.py",
              "size": 6428,
              "sha1": null,
              "md5": null,
              "sha256": "e99fd5a033165d8a870e730383a30199798cc5fd31194cec120b616d8f59c71c",
              "sha512": null,
              "extra_data": {}
            },
            {
              "path": "atomicwrites-1.2.1.dist-info/METADATA",
              "size": 5535,
              "sha1": null,
              "md5": null,
              "sha256": "0289c810b3daea2a81801eac17154b464b8eb7b34c5ae2c8de6706d18205a358",
              "sha512": null,
              "extra_data": {}
            },
            {
              "path": "atomicwrites-1.2.1.dist-info/RECORD",
              "size": null,
              "sha1": null,
              "md5": null,
              "sha256": null,
              "sha512": null,
              "extra_data": {}
            },
            {
              "path": "atomicwrites-1.2.1.dist-info/WHEEL",
              "size": 110,
              "sha1": null,
              "md5": null,
              "sha256": "81dbae3f206f149412434cddcb117b934cf29c35db21bbe0e59047a17ba6e6e9",
              "sha512": null,
              "extra_data": {}
            },
            {
              "path": "atomicwrites-1.2.1.dist-info/top_level.txt",
              "size": 13,
              "sha1": null,
              "md5": null,
              "sha256": "92ceb8cca55492b97666bacfd38e82b32b5795219ff202c6f887285e93727a87",
              "sha512": null,
              "extra_data": {}
            }
          ],
          "extra_data": {},
          "dependencies": [],
          "repository_homepage_url": "https://pypi.org/project/atomicwrites",
          "repository_download_url": "https://pypi.org/packages/source/a/atomicwrites/atomicwrites-1.2.1.tar.gz",
          "api_data_url": "https://pypi.org/pypi/atomicwrites/1.2.1/json",
          "datasource_id": "pypi_wheel",
          "purl": "pkg:pypi/atomicwrites@1.2.1"
        }
      ],
      "for_packages": [
        "pkg:pypi/atomicwrites@1.2.1?uuid=fixed-uid-done-for-testing-5642512d1758"
      ],
      "scan_errors": []
    },
    {
      "path": "requirements",
      "type": "directory",
      "package_data": [],
      "for_packages": [],
      "scan_errors": []
    },
    {
      "path": "requirements/requirements.txt",
      "type": "file",
      "package_data": [
        {
          "type": "pypi",
          "namespace": null,
          "name": null,
          "version": null,
          "qualifiers": {},
          "subpath": null,
          "primary_language": "Python",
          "description": null,
          "release_date": null,
          "parties": [],
          "keywords": [],
          "homepage_url": null,
          "download_url": null,
          "size": null,
          "sha1": null,
          "md5": null,
          "sha256": null,
          "sha512": null,
          "bug_tracking_url": null,
          "code_view_url": null,
          "vcs_url": null,
          "copyright": null,
          "declared_license_expression": null,
          "declared_license_expression_spdx": null,
          "license_detections": [],
          "other_license_expression": null,
          "other_license_expression_spdx": null,
          "other_license_detections": [],
          "extracted_license_statement": null,
          "notice_text": null,
          "source_packages": [],
          "file_references": [],
          "extra_data": {},
          "dependencies": [
            {
              "purl": "pkg:pypi/setuptools",
              "extracted_requirement": "setuptools>=32.0.0",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": false,
              "resolved_package": {},
              "extra_data": {
                "is_editable": false,
                "link": null,
                "hash_options": [],
                "is_constraint": false,
                "is_archive": null,
                "is_wheel": false,
                "is_url": null,
                "is_vcs_url": null,
                "is_name_at_url": false,
                "is_local_path": null
              }
            },
            {
              "purl": "pkg:pypi/nose",
              "extracted_requirement": "nose>=1.3.7",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": false,
              "resolved_package": {},
              "extra_data": {
                "is_editable": false,
                "link": null,
                "hash_options": [],
                "is_constraint": false,
                "is_archive": null,
                "is_wheel": false,
                "is_url": null,
                "is_vcs_url": null,
                "is_name_at_url": false,
                "is_local_path": null
              }
            },
            {
              "purl": "pkg:pypi/chardet",
              "extracted_requirement": "chardet>=3.0.4",
              "scope": "install",
              "is_runtime": true,
              "is_optional": false,
              "is_resolved": false,
              "resolved_package": {},
              "extra_data": {
                "is_editable": false,
                "link": null,
                "hash_options": [],
                "is_constraint": false,
                "is_archive": null,
                "is_wheel": false,
                "is_url": null,
                "is_vcs_url": null,
                "is_name_at_url": false,
                "is_local_path": null
              }
            }
          ],
          "repository_homepage_url": null,
          "repository_download_url": null,
          "api_data_url": null,
          "datasource_id": "pip_requirements",
          "purl": null
        }
      ],
      "for_packages": [],
      "scan_errors": []
    }
  ]
}